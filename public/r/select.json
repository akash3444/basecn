{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:ui",
  "title": "Select",
  "description": "Displays a list of options for the user to pick fromâ€”triggered by a button.",
  "dependencies": [
    "@base-ui-components/react",
    "lucide-react"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/select.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Select as BaseSelect } from \"@base-ui-components/react/select\";\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Select({ ...props }: React.ComponentProps<typeof BaseSelect.Root>) {\n  return <BaseSelect.Root data-slot=\"select\" {...props} />;\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof BaseSelect.Group>) {\n  return <BaseSelect.Group data-slot=\"select-group\" {...props} />;\n}\n\nfunction SelectValue({\n  placeholder,\n  ...props\n}: React.ComponentProps<typeof BaseSelect.Value> & {\n  placeholder?: string;\n}) {\n  if (!placeholder) {\n    return <BaseSelect.Value data-slot=\"select-value\" {...props} />;\n  }\n\n  return (\n    <BaseSelect.Value\n      render={(_, { value }) => {\n        if (value) {\n          return <BaseSelect.Value data-slot=\"select-value\" {...props} />;\n        }\n\n        // Placeholder\n        return (\n          <span data-slot=\"select-value\" className=\"text-muted-foreground\">\n            {placeholder}\n          </span>\n        );\n      }}\n      {...props}\n    />\n  );\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof BaseSelect.Trigger> & {\n  size?: \"sm\" | \"default\";\n}) {\n  return (\n    <BaseSelect.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <BaseSelect.Icon\n        render={<ChevronDownIcon className=\"size-4 opacity-50\" />}\n      />\n    </BaseSelect.Trigger>\n  );\n}\n\nfunction SelectPositioner(\n  props: React.ComponentProps<typeof BaseSelect.Positioner>\n) {\n  return (\n    <BaseSelect.Portal>\n      <BaseSelect.Positioner\n        data-slot=\"select-positioner\"\n        alignItemWithTrigger={false}\n        sideOffset={5}\n        {...props}\n      />\n    </BaseSelect.Portal>\n  );\n}\n\nfunction SelectContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof BaseSelect.Popup>) {\n  return (\n    <>\n      <SelectScrollUpButton />\n      <BaseSelect.Popup\n        data-slot=\"select-content\"\n        className={cn(\n          \"p-1 bg-popover text-popover-foreground data-[open]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[open]:fade-in-0 data-[closed]:zoom-out-95 data-[open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--available-height) min-w-(--anchor-width) origin-(--transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </BaseSelect.Popup>\n      <SelectScrollDownButton />\n    </>\n  );\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof BaseSelect.GroupLabel>) {\n  return (\n    <BaseSelect.GroupLabel\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof BaseSelect.Item>) {\n  return (\n    <BaseSelect.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <BaseSelect.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </BaseSelect.ItemIndicator>\n      </span>\n      <BaseSelect.ItemText>{children}</BaseSelect.ItemText>\n    </BaseSelect.Item>\n  );\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof BaseSelect.Separator>) {\n  return (\n    <BaseSelect.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof BaseSelect.ScrollUpArrow>) {\n  return (\n    <BaseSelect.ScrollUpArrow\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"w-full bg-popover z-51 text-center cursor-default h-6 flex items-center justify-center text-md border data-[direction=up]:border-b-0 data-[direction=down]:border-t-0 data-[direction=up]:rounded-t-md data-[direction=down]:rounded-b-md\",\n        \"before:content-[''] before:absolute before:w-full before:h-full before:left-0 data-[direction=up]:before:top-full data-[direction=down]:bottom-0 data-[direction=down]:before:-bottom-full\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </BaseSelect.ScrollUpArrow>\n  );\n}\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof BaseSelect.ScrollDownArrow>) {\n  return (\n    <BaseSelect.ScrollDownArrow\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"w-full bg-popover z-51 text-center cursor-default h-6 flex items-center justify-center text-md border data-[direction=up]:border-b-0 data-[direction=down]:border-t-0 data-[direction=up]:rounded-t-md data-[direction=down]:rounded-b-md\",\n        \"before:content-[''] before:absolute before:w-full before:h-full before:left-0 data-[direction=up]:before:top-full data-[direction=down]:bottom-0 data-[direction=down]:before:-bottom-full\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </BaseSelect.ScrollDownArrow>\n  );\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n  SelectPositioner,\n};\n",
      "type": "registry:component"
    }
  ]
}